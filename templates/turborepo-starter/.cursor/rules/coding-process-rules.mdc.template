# Coding Process Rules for Turborepo Starter

## Development Workflow

1. Follow the monorepo development process:
   - Create new packages in the `packages` directory
   - Create new apps in the `apps` directory
   - Implement feature-based architecture in apps
   - Add tests for new features and packages
   - Update documentation as needed

2. Testing Requirements:
   - Write unit tests for utilities and hooks
   - Write component tests for UI elements
   - Write integration tests for feature workflows
   - Write package tests
   - Maintain test coverage above 80%

3. Code Review Process:
   - Follow the project's code review guidelines
   - Ensure all tests pass
   - Verify TypeScript types and interfaces
   - Check for performance implications
   - Review accessibility compliance

## Package Development

1. New Package Structure:
   ```
   packages/
     package-name/
       src/
         index.ts
         types.ts
       tests/
       README.md
       package.json
   ```

2. Implementation Steps:
   - Define package purpose and API
   - Create necessary types and interfaces
   - Implement core functionality
   - Add tests
   - Document the package
   - Review and refactor

## App Development

1. New App Structure:
   ```
   apps/
     app-name/
       src/
         features/
           feature-name/
             components/
             hooks/
             utils/
             types/
             constants/
             tests/
             index.ts
             README.md
   ```

2. Implementation Steps:
   - Define app requirements
   - Create necessary types and interfaces
   - Implement core functionality
   - Add tests
   - Document the app
   - Review and refactor

## Performance Considerations

1. Use Turborepo's caching
2. Implement proper code splitting
3. Optimize package dependencies
4. Implement proper caching strategies
5. Monitor and optimize build times

## Security Guidelines

1. Follow security best practices
2. Implement proper authentication and authorization
3. Sanitize user inputs
4. Use environment variables for sensitive data
5. Keep dependencies updated

import { defineConfig } from 'vite';
import path from 'path';
import react from '@vitejs/plugin-react';
import eslint from 'vite-plugin-eslint';
import { VitePWA } from 'vite-plugin-pwa';
import electron from 'vite-electron-plugin'
import { loadViteEnv } from 'vite-electron-plugin/plugin';
import { rmSync } from 'fs';

const { PORT = '3000' } = process.env;

rmSync(path.join(__dirname, 'dist-electron'), { recursive: true, force: true });

const root = path.resolve(__dirname, '<%= srcDir%>');

const vitePluginPWA = () =>
  VitePWA({
    registerType: 'autoUpdate',
    injectRegister: 'auto',
    devOptions: {
      enabled: true,
    },
    manifest: {
      name: '<%= projectName%>',
      short_name: '<%= projectName%>',
      description: '<%= projectName%>',
      theme_color: '#ffffff',
      icons: [
        {
          src: '/pwa-192x192.png',
          sizes: '192x192',
          type: 'image/png',
        },
        {
          src: '/pwa-512x512.png',
          sizes: '512x512',
          type: 'image/png',
        },
        {
          src: '/pwa-512x512.png',
          sizes: '512x512',
          type: 'image/png',
          purpose: 'any maskable',
        },
      ],
    },
  });

  const electronPlugin = () => electron({
    include: [
      // The Electron source codes directory
      'electron',
    ],
    plugins: [loadViteEnv()],
  });

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react(), eslint(), vitePluginPWA(), electronPlugin()],
  server: {
    host: '0.0.0.0',
    port: parseInt(PORT, 10),
  },
  resolve: {
    alias: {
      '<%= projectImportPath%>': `${root}/`,
    },
  },
  esbuild: {
    loader: 'tsx',
    include: '<%= srcDir%>/**/*.{ts,tsx,js,jsx}',
  },
  optimizeDeps: {
    esbuildOptions: {
      loader: {
        '.js': 'jsx',
        '.ts': 'tsx',
      },
    },
  },
});
